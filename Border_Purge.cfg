
[gcode_arcs]                                              #For G2 / G3 Movement

[gcode_macro BORDER_PURGE]
description: A purge macro that adapts to your bed diameter. 
description: Counterclockwise movement with variable starting positions.
description: Homing and bed mesh is not included but it is required before it is used.

variable_start_position: 1                                #Use 1 / 2 / 3 / 4 
variable_verbose: False                                   #Use True / False - for debugging 
variable_cold_test: False                                 #Use True / False - set True if you dont want to extrude any material
variable_volumetric_speed: 4                              #Volumetric flow speed in mm^3/s that your hot-end is capable of melting.
variable_z_height: 0.2                                    #Layer height used for the purge line
variable_z_wipe_height: 0.12                              #Layer height used for the wipe line, a smaller value is recommended.
variable_flow_multi: 1                                    #Flow rate multiplier for the purge line.
#variable_flow_rate: 6
variable_distance_to_border: 0.5                          #Distance from the calcualted bed edge in mm
variable_start_z: 100                                     #Z height to dwell a little bit.
variable_travel_speed: 4800                               #Travel speed used for travel movements. [mm/min]
variable_travel_speed_slow: 2400                          #Travel speed used for purging movements. [mm/min]
variable_pi: 3.13159                                      #Don't modify.


gcode:
  {% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
  {% set border_radius = printer.configfile.config.printer.delta_radius | float %}
  {% set working_radius = (border_radius-distance_to_border) | float %}
  {% set cross_section = nozzle_dia * z_height | float %}
  {% set line_length = ((2 * pi * working_radius / 4)) | float %}
  {% set purge_amount = cross_section * line_length * flow_multi| float %}
  {% set purge_move_speed = (line_length/(purge_amount/volumetric_speed))*60| float %}

  {% if start_position == 1 %}
    {% set start_x = (working_radius *-1) | float %}
    {% set start_y = (working_radius * 0) | float %}
    {% set end_x = (working_radius * 0) | float %}
    {% set end_y = (working_radius * -1 ) | float %}
    {% set value_i = (working_radius * 1) | float %}
    {% set value_j = (working_radius * 0) | float %}
    {% set value_ii = (working_radius * 0) | float %}
    {% set value_jj = (working_radius * 1) | float %}
    {% set end_x_empty = (working_radius * 1) | float %}
    {% set end_y_empty = (working_radius * 0) | float %}
  {% endif %}

  {% if start_position == 2 %}
    {% set start_x = (working_radius *0) | float %}
    {% set start_y = (working_radius * -1) | float %}
    {% set end_x = (working_radius * 1) | float %}
    {% set end_y = (working_radius * 0 ) | float %}
    {% set value_i = (working_radius * 0) | float %}
    {% set value_j = (working_radius * 1) | float %}
    {% set value_ii = (working_radius * -1) | float %}
    {% set value_jj = (working_radius * 0) | float %}
    {% set end_x_empty = (working_radius * 0) | float %}
    {% set end_y_empty = (working_radius * 1) | float %}
  {% endif %}

  {% if start_position == 3 %}
    {% set start_x = (working_radius *1) | float %}
    {% set start_y = (working_radius * 0) | float %}
    {% set end_x = (working_radius * 0) | float %}
    {% set end_y = (working_radius * 1 ) | float %}
    {% set value_i = (working_radius * -1) | float %}
    {% set value_j = (working_radius * 0) | float %}
    {% set value_ii = (working_radius * 0) | float %}
    {% set value_jj = (working_radius * -1) | float %}
    {% set end_x_empty = (working_radius * -1) | float %}
    {% set end_y_empty = (working_radius * 0) | float %}
  {% endif %}

  {% if start_position == 4 %}
    {% set start_x = (working_radius *0) | float %}
    {% set start_y = (working_radius * 1) | float %}
    {% set end_x = (working_radius * -1) | float %}
    {% set end_y = (working_radius * 0 ) | float %}
    {% set value_i = (working_radius * 0) | float %}
    {% set value_j = (working_radius * -1) | float %}
    {% set value_ii = (working_radius * 1) | float %}
    {% set value_jj = (working_radius * 0) | float %}
    {% set end_x_empty = (working_radius * 0) | float %}
    {% set end_y_empty = (working_radius * -1) | float %}
  {% endif %}


  {% if verbose == True %}
    { action_respond_info("bed radius  : %f" % (border_radius))  }
    { action_respond_info("working radius  : %f" % (working_radius))  }
    { action_respond_info("start X : %d" % (start_x))  }
    { action_respond_info("start Y  : %d" % (start_y))  }
    { action_respond_info("end X : %d" % (end_x))  }
    { action_respond_info("end Y : %d" % (end_y))  }
    { action_respond_info("end X' : %d" % (end_x_empty))  }
    { action_respond_info("end Y': %d" % (end_y_empty))  }
    { action_respond_info("I : %d" % (value_i))  }
    { action_respond_info("J : %d" % (value_j))  }
    { action_respond_info("Purge line : %f" % (line_length))  }
    { action_respond_info("Cross section : %f" % (cross_section))  }
    { action_respond_info("Purge amount : %f" % (purge_amount))  }
    { action_respond_info("Purge speed : %f" % (purge_move_speed))  }
  {% endif %}

 {% if cold_test == False %}
    G90                                                                
    G0 Z{start_z} F{travel_speed}
    G0 X{start_x} Y{start_y}
    G0 Z{z_height} F{travel_speed_slow}
    G3 X{end_x} Y{end_y} I{value_i} J{value_j} F{purge_move_speed} E{purge_amount}
    G0 Z{z_wipe_height} F{travel_speed}
    G3 X{end_x_empty} Y{end_y_empty} I{value_ii} J{value_jj} F{purge_move_speed}
  {% else %}
    G90                                                              
    G0 Z{start_z} F{travel_speed}
    G0 X{start_x} Y{start_y}
    G0 Z{z_height} F{travel_speed_slow}
    G3 X{end_x} Y{end_y} I{value_i} J{value_j} F{purge_move_speed}
    G0 Z{z_wipe_height} F{travel_speed}
    G3 X{end_x_empty} Y{end_y_empty} I{value_ii} J{value_jj} F{purge_move_speed}
  {% endif %}
